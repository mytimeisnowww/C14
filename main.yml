name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run tests
      run: python -m unittest test_library_system.py > test_results.txt
    - name: Upload test report
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: test_results.txt # Assuming tests output to this file

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Build package
      run: |-
        python setup.py sdist bdist_wheel
        echo "Simulating package build..." > package.txt # Placeholder for actual build step
    - name: Upload package artifact
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: package.txt

  notify:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()
    steps:
    - name: Send email notification
      run: |
        python send_email.py
      env:
        EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
        PIPELINE_STATUS: ${{ job.status }}
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_EMAIL_PASSWORD: ${{ secrets.SENDER_EMAIL_PASSWORD }}


