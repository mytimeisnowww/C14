name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  determine_author_email:
    runs-on: ubuntu-latest 
    outputs:
      author_email: ${{ steps.pick.outputs.email }}
    steps:
      - uses: actions/checkout@v4
      - id: raw
        run: |
          EMAIL="${{ github.event.head_commit.author.email }}"
          [[ -z "$EMAIL" ]] && EMAIL="${{ github.event.pusher.email }}"
          [[ -z "$EMAIL" ]] && EMAIL="$(git log -1 --pretty=format:'%ae' 2>/dev/null || true)"
          echo "email=$EMAIL" >> $GITHUB_OUTPUT
      - id: user
        uses: actions/github-script@v7
        with:
          script: |
            const login = context.payload.pull_request?.user?.login || context.actor
            const user = await github.rest.users.getByUsername({ username: login })
            core.setOutput('public_email', user.data.email || '')
      - id: pick
        run: |
          RAW="${{ steps.raw.outputs.email }}"
          PUB="${{ steps.user.outputs.public_email }}"
          FINAL="$RAW"
          [[ -z "$FINAL" || "$FINAL" == "" ]] && FINAL="$PUB"
          echo "email=$FINAL" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: determine_author_email
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: python -m unittest test_library_system.py > test_results.txt
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test_results.txt # Assuming tests output to this file

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel build
      - name: Build package
        run: |-
          python setup.py sdist bdist_wheel
          echo "Simulating package build..." > package.txt # Placeholder for actual build step
      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: package.txt

  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Get Commit Author Email
        id: get_email
        run: |
          echo "COMMIT_AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')" >> $GITHUB_ENV

      - name: Set UTF-8 Encoding
        run: |
          export PYTHONIOENCODING=utf-8
          printenv

      - name: Send Email Notification
        run: |
          python send_email.py
        env:
          EMAIL_RECIPIENT: ${{ env.COMMIT_AUTHOR_EMAIL }}
          PIPELINE_STATUS: success
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          SENDER_EMAIL_PASSWORD: ${{ secrets.SENDER_EMAIL_PASSWORD }}
